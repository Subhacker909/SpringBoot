=> Java Persistence API (JPA) :-
	-> JPA was released in May 2006 as the part of Java EE 5 (Enterprise Edition)
	-> JPA is a specification that simplifies the interaction between "java objects" and "relational database"

	-> NOTE :
		= JPA is only specification, its implementation is provided by ORM vendors  i.e. JBoss (hibernate), Apache Software Foundation (Open JPA), Eclipse Foundation (EclipseLink) etc
		= To use JPA, we have to use any one ORM tool i.e. hibernate, EclipseLink etc

	-> Advantages of JPA :-
		1. Abstraction over database :-
			= JPA provides a higher-level, object-oriented way to interact with database, allowing developers to work with java objects rather then dealing with SQL queries and database-specific code
		2. Database portability :-
			= JPA abstracts away the database-specific details, making it easier to switch between different databases
		3. Improvides productivity :-
			= By using JPA, developers can focus on business-logic rather than database interactions, leading to faster development and reduce the code complexicity
		4. ORM (Object Relational Mapping) :-
			= JPA supports ORM means it maps the java objects to the database and vice versa. This simplifies the storage and retrival of java objects in database
		5. Scalability :-
			= JPA enables the development of scalable applications by managing database cnnections, pooling, optimizing performace etc
		etc


===================================================================================================================

=> JDBC (Java Database Connection) :-
	-> JDBC is an API which is used to store the data in database
	-> JDBC is only specification, its implementation is provided by database vendors i.e. MySQL, Oracle, PostgreSQL etc


=> ORM (Object Relational Mapping) :-
	-> ORM is a programming approch / technique / functionality used to provide the relationship between "Objects" and "Relational database" by using XML mapping file or annotations


=> Hibernate :-
	-> Hibernate is an ORM tool which is used to store the data/objects in database
	-> Hibernate follows the ORM approach


=> JPA (Java Persistence API) :-
	-> JPA is an API which is used to store the data in database (but it follows ORM approach)
	-> JPA is only specification, its implementation is provided by ORM vendors i.e. JBoss (hibernate), Apache Software Foundation (Open JPA), Eclipse Foundation (EclipseLink) etc

===================================================================================================================

=> What is specification ?
	-> Specification means guidelines or blueprint for how a particular technology or API should work
	-> Specification means formal document that defines a set of rules, behavior and interfaces that software application implements

===================================================================================================================

=> JPA is an API which contains interfaces and classes which are as follows :-
	1. Persistence <class>
	2. EntityManagerFactory <interface>
	3. EntityManager <interface>
	4. EntityTransaction <interface>

	5. Query <interface>
	6. TypedQuery <interface>

	7. CritieriaBuilder <interface>
	8. CriteriaQuery <interface>
	    etc

-----------------------------------

1. Persistence <class>
	-> It is a class which provides a static method i.e. createEntityManagerFactory() for obtaining EntityManagerFactory instances

2. EntityManagerFactory <interface>
	-> It is an interface which is used to create EntityManager instance

3. EntityManager <interface>
	-> It is an interface which manages the lifecycle of an entities and provides methods for CRUD operations

4. EntityTransaction <interface>
	-> It is used for transaction management including starting, committing and rollback the transaction

==================================================================================================================

=> Steps to create JPA first program :-
	1. Download and install any one IDE
	2. Create "Simple Java Project" or "Maven Project"
	3. Add jars or provide dependencies
	4. Create POJO class
	5. Create mapping file (or provide annotations in POJO class)
	6. Create Persistence Unit Configuration (persistence.xml) in META-INF folder
	7. Create main class and execute the application

==================================================================================================================